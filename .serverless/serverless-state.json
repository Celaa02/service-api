{
  "service": {
    "service": "aws-crud-api",
    "serviceObject": {
      "name": "aws-crud-api"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "stage": "dev",
      "environment": {
        "STAGE": "dev",
        "PRODUCTS_TABLE_NAME": "aws-crud-api-dev-products",
        "ORDERS_TABLE_NAME": "aws-crud-api-dev-orders",
        "LOG_LEVEL": "DEBUG",
        "IS_OFFLINE": "false"
      },
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CreateOrderLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-crud-api-dev-createOrder"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": ["lambda.amazonaws.com"]
                    },
                    "Action": ["sts:AssumeRole"]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": ["-", ["aws-crud-api", "dev", "lambda"]]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-crud-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": ["logs:PutLogEvents"],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-crud-api-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "aws-crud-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CreateOrderLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-crud-api/dev/1756192197873-2025-08-26T07:09:57.873Z/aws-crud-api.zip"
              },
              "Handler": "src/handlers/createOrders.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "aws-crud-api-dev-createOrder",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "PRODUCTS_TABLE_NAME": "aws-crud-api-dev-products",
                  "ORDERS_TABLE_NAME": "aws-crud-api-dev-orders",
                  "LOG_LEVEL": "DEBUG",
                  "IS_OFFLINE": "false"
                }
              },
              "Role": {
                "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"]
              }
            },
            "DependsOn": ["CreateOrderLogGroup"]
          },
          "CreateOrderLambdaVersion7JxuOt3N38bvcTu7j5VxBdlzwwwUcgWhV3NcaVeU4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateOrderLambdaFunction"
              },
              "CodeSha256": "PyVgKmjfp9ir+Clah1mFmYiRL+WV0FdKcSQdl8yc5HU="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-aws-crud-api",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "CreateOrderLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": ["CreateOrderLambdaFunction", "Arn"]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateOrder": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateOrderLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostOrders": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /orders",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateOrder"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreateOrder"
          },
          "ProductsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "aws-crud-api-dev-products",
              "BillingMode": "PAY_PER_REQUEST",
              "SSESpecification": {
                "SSEEnabled": true
              },
              "PointInTimeRecoverySpecification": {
                "PointInTimeRecoveryEnabled": true
              },
              "AttributeDefinitions": [
                {
                  "AttributeName": "productId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "productId",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "OrdersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "aws-crud-api-dev-orders",
              "BillingMode": "PAY_PER_REQUEST",
              "SSESpecification": {
                "SSEEnabled": true
              },
              "PointInTimeRecoverySpecification": {
                "PointInTimeRecoveryEnabled": true
              },
              "AttributeDefinitions": [
                {
                  "AttributeName": "orderId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "createdAt",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "orderId",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "UserOrdersIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "userId",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "createdAt",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-aws-crud-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "CreateOrderLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateOrderLambdaVersion7JxuOt3N38bvcTu7j5VxBdlzwwwUcgWhV3NcaVeU4"
            },
            "Export": {
              "Name": "sls-aws-crud-api-dev-CreateOrderLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-aws-crud-api-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-aws-crud-api-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "esbuild": {
        "bundle": true,
        "minify": true,
        "sourcemap": true,
        "target": "node18",
        "platform": "node",
        "concurrency": 10
      }
    },
    "plugins": ["serverless-dynamodb-local", "serverless-offline", "serverless-esbuild"],
    "pluginsData": {},
    "functions": {
      "createOrder": {
        "handler": "src/handlers/createOrders.handler",
        "events": [
          {
            "httpApi": {
              "method": "POST",
              "path": "/orders"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/orders"
          }
        ],
        "name": "aws-crud-api-dev-createOrder",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "CreateOrderLambdaVersion7JxuOt3N38bvcTu7j5VxBdlzwwwUcgWhV3NcaVeU4"
      }
    },
    "resources": {
      "Resources": {
        "ProductsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "aws-crud-api-dev-products",
            "BillingMode": "PAY_PER_REQUEST",
            "SSESpecification": {
              "SSEEnabled": true
            },
            "PointInTimeRecoverySpecification": {
              "PointInTimeRecoveryEnabled": true
            },
            "AttributeDefinitions": [
              {
                "AttributeName": "productId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "productId",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "OrdersTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "aws-crud-api-dev-orders",
            "BillingMode": "PAY_PER_REQUEST",
            "SSESpecification": {
              "SSEEnabled": true
            },
            "PointInTimeRecoverySpecification": {
              "PointInTimeRecoveryEnabled": true
            },
            "AttributeDefinitions": [
              {
                "AttributeName": "orderId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "userId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "createdAt",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "orderId",
                "KeyType": "HASH"
              }
            ],
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "UserOrdersIndex",
                "KeySchema": [
                  {
                    "AttributeName": "userId",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "createdAt",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "aws-crud-api",
      "frameworkVersion": "3",
      "useDotenv": true,
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "params": {
        "dev": {
          "productsTableName": "aws-crud-api-dev-products",
          "ordersTableName": "aws-crud-api-dev-orders",
          "logLevel": "DEBUG"
        },
        "prod": {
          "productsTableName": "aws-crud-api-prod-products",
          "ordersTableName": "aws-crud-api-prod-orders",
          "logLevel": "INFO"
        }
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/aws-crud-api/dev/1756192197873-2025-08-26T07:09:57.873Z",
    "artifact": "aws-crud-api.zip"
  }
}
