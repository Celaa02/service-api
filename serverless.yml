service: aws-crud-api
frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  environment:
    STAGE: ${sls:stage}
    PRODUCTS_TABLE_NAME: ${param:productsTableName}
    ORDERS_TABLE_NAME: ${param:ordersTableName}
    LOG_LEVEL: ${param:logLevel}
    IS_OFFLINE: ${env:IS_OFFLINE, 'false'}

params:
  dev:
    productsTableName: ${self:service}-dev-products
    ordersTableName: ${self:service}-dev-orders
    logLevel: DEBUG
  prod:
    productsTableName: ${self:service}-prod-products
    ordersTableName: ${self:service}-prod-orders
    logLevel: INFO

plugins:
  - serverless-offline
  - serverless-esbuild

custom:
  esbuild:
    bundle: true
    minify: true
    sourcemap: true
    target: node18
    platform: node
    concurrency: 10

functions:
  createOrder:
    handler: src/handlers/createOrders.handler
    events:
      - httpApi:
          method: POST
          path: /orders

resources:
  Resources:
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.PRODUCTS_TABLE_NAME}
        BillingMode: PAY_PER_REQUEST
        SSESpecification: { SSEEnabled: true }
        PointInTimeRecoverySpecification: { PointInTimeRecoveryEnabled: true }
        AttributeDefinitions:
          - AttributeName: productId
            AttributeType: S
        KeySchema:
          - AttributeName: productId
            KeyType: HASH

    OrdersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.ORDERS_TABLE_NAME}
        BillingMode: PAY_PER_REQUEST
        SSESpecification: { SSEEnabled: true }
        PointInTimeRecoverySpecification: { PointInTimeRecoveryEnabled: true }
        AttributeDefinitions:
          - AttributeName: orderId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
        KeySchema:
          - AttributeName: orderId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: UserOrdersIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
